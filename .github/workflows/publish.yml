on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build, create release, upload assets

jobs:
  build:
    name: Build, create release, upload assets
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        id: vars
        run: echo "RELEASE_VERSION=$(git describe --tags --always 2> /dev/null)" >> $GITHUB_ENV
      - name: Build
        run: |
          x86_64-w64-mingw32-gcc kbbl.c -o kbbl.exe -s -mwindows -luuid -D_WIN32_WINNT=0x0600 -DWINVER=0x0600 -DWIN32_LEAN_AND_MEAN -D__USE_MINGW_ANSI_STDIO=0 -Wall -Wextra
          zip -rqX "kbbl.zip" install.cmd kbbl.exe uninstall.cmd WinRing0.dll WinRing0.sys WinRing0.vxd WinRing0x64.dll WinRing0x64.sys
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./kbbl.zip
          asset_name: kbbl-${{ steps.vars.outputs.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
